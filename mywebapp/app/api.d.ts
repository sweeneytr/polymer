/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/assets": {
    /** Asset List */
    get: operations["asset_list_api_assets_get"];
  };
  "/api/assets/{id}": {
    /** Asset */
    get: operations["asset_api_assets__id__get"];
  };
  "/api/assets/{id}/download": {
    /** Asset Download */
    get: operations["asset_download_api_assets__id__download_get"];
  };
  "/api/downloads": {
    /** Downloads List */
    get: operations["downloads_list_api_downloads_get"];
  };
  "/api/downloads/{id}": {
    /** Get Download */
    get: operations["get_download_api_downloads__id__get"];
  };
  "/api/tags": {
    /** Tag List */
    get: operations["tag_list_api_tags_get"];
  };
  "/api/tags/{id}": {
    /** Tag */
    get: operations["tag_api_tags__id__get"];
  };
  "/api/tasks": {
    /** Task List */
    get: operations["task_list_api_tasks_get"];
  };
  "/api/tasks/{id}/run-now": {
    /** Task Run */
    post: operations["task_run_api_tasks__id__run_now_post"];
  };
  "/api/users": {
    /** Users List */
    get: operations["users_list_api_users_get"];
  };
  "/api/users/{id}": {
    /** Asset */
    get: operations["asset_api_users__id__get"];
  };
  "/api/categories": {
    /** Catagory List */
    get: operations["catagory_list_api_categories_get"];
    /** Catagory Create */
    post: operations["catagory_create_api_categories_post"];
  };
  "/api/categories/{id}": {
    /** Get Category */
    get: operations["get_category_api_categories__id__get"];
    /** Delete Category */
    delete: operations["delete_category_api_categories__id__delete"];
  };
  "/api/mmf/login": {
    /** Mmf Login */
    get: operations["mmf_login_api_mmf_login_get"];
  };
  "/api/mmf/callback": {
    /** Mmf Callback */
    get: operations["mmf_callback_api_mmf_callback_get"];
  };
  "/api/mmf/refresh": {
    /** Mmf Refresh */
    get: operations["mmf_refresh_api_mmf_refresh_get"];
  };
  "/api/mmf/status": {
    /** Mmf Refresh */
    get: operations["mmf_refresh_api_mmf_status_get"];
  };
  "/api/cults/status": {
    /** Mmf Refresh */
    get: operations["mmf_refresh_api_cults_status_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AssetModel */
    AssetModel: {
      /** Id */
      id: number;
      /** Slug */
      slug: string;
      /** Name */
      name: string;
      /** Details */
      details: string;
      /** Description */
      description: string;
      /** Creator */
      creator: string;
      /** Creator Id */
      creator_id: number;
      /** Cents */
      cents: number;
      /** Download Ids */
      download_ids: number[];
      /** Download Url */
      download_url: string | null;
      /** Yanked */
      yanked: boolean;
      /** Downloaded */
      downloaded: boolean;
      /** Illustration Url */
      illustration_url: string | null;
      /** Illustrations */
      illustrations: components["schemas"]["IllustrationModel"][];
      /** Tag Ids */
      tag_ids: number[];
      /** Free */
      free: boolean;
      /** Nab Url */
      nab_url: string | null;
    };
    /** CategoryCreate */
    CategoryCreate: {
      /** Parent Id */
      parent_id?: number | null;
      /** Label */
      label: string;
    };
    /** CategoryModel */
    CategoryModel: {
      /** Id */
      id: number;
      /** Parent Id */
      parent_id: number | null;
      /** Child Ids */
      child_ids: number[];
      /** Label */
      label: string;
    };
    /** CultsModel */
    CultsModel: {
      /** Email */
      email: string;
    };
    /** DownloadModel */
    DownloadModel: {
      /** Id */
      id: number;
      /** Asset Id */
      asset_id: number;
      /** Filename */
      filename: string;
      /**
       * Downloaded At
       * Format: date-time
       */
      downloaded_at: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** IllustrationModel */
    IllustrationModel: {
      /** Src */
      src: string;
    };
    /** MmfModel */
    MmfModel: {
      /** User Id */
      user_id: number;
      /** Access Token */
      access_token: string;
      /**
       * Access Exp
       * Format: date-time
       */
      access_exp: string;
      /** Refresh Token */
      refresh_token: string;
      /**
       * Refresh Exp
       * Format: date-time
       */
      refresh_exp: string;
    };
    /** TagModel */
    TagModel: {
      /** Id */
      id: number;
      /** Label */
      label: string;
    };
    /** TaskModel */
    TaskModel: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Cron */
      cron: string;
      /** Startup */
      startup: boolean;
      /** Last Run At */
      last_run_at: string | null;
      /** Last Duration */
      last_duration: number | null;
      /** Run Url */
      run_url: string | null;
    };
    /** UserModel */
    UserModel: {
      /** Id */
      id: number;
      /** Nickname */
      nickname: string;
      /** Asset Ids */
      asset_ids: number[];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Asset List */
  asset_list_api_assets_get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
        creator_id?: number | null;
        tag_id?: number | null;
        yanked?: boolean | null;
        downloaded?: boolean | null;
        free?: boolean | null;
        q?: string | null;
        id?: number[] | null;
        _order?: string;
        _sort?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AssetModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Asset */
  asset_api_assets__id__get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AssetModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Asset Download */
  asset_download_api_assets__id__download_get: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Downloads List */
  downloads_list_api_downloads_get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
        asset_id?: number | null;
        q?: string | null;
        id?: number[] | null;
        _order?: string;
        _sort?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DownloadModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Download */
  get_download_api_downloads__id__get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DownloadModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Tag List */
  tag_list_api_tags_get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
        asset_id?: number | null;
        q?: string | null;
        id?: number[] | null;
        _order?: string;
        _sort?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TagModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Tag */
  tag_api_tags__id__get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TagModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Task List */
  task_list_api_tasks_get: {
    parameters: {
      query?: {
        _order?: string;
        _sort?: string;
        q?: string | null;
        _start?: number | null;
        _end?: number | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TaskModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Task Run */
  task_run_api_tasks__id__run_now_post: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Users List */
  users_list_api_users_get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
        asset_id?: number | null;
        q?: string | null;
        id?: number[] | null;
        _order?: string;
        _sort?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Asset */
  asset_api_users__id__get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Catagory List */
  catagory_list_api_categories_get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
        asset_id?: number | null;
        q?: string | null;
        id?: number[] | null;
        _order?: string;
        _sort?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Catagory Create */
  catagory_create_api_categories_post: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["CategoryModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Category */
  get_category_api_categories__id__get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Category */
  delete_category_api_categories__id__delete: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Mmf Login */
  mmf_login_api_mmf_login_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Mmf Callback */
  mmf_callback_api_mmf_callback_get: {
    parameters: {
      query: {
        code: string;
        state: string;
        _start?: number | null;
        _end?: number | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MmfModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Mmf Refresh */
  mmf_refresh_api_mmf_refresh_get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Mmf Refresh */
  mmf_refresh_api_mmf_status_get: {
    parameters: {
      query?: {
        _start?: number | null;
        _end?: number | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MmfModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Mmf Refresh */
  mmf_refresh_api_cults_status_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CultsModel"];
        };
      };
    };
  };
}
